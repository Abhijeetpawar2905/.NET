
/*2)Create a class Employee having private instance member 
id - id is readonly property and generated by your application
name- write getter setter
salary- write getter setter
net salary
Write method whoâ€™s job is to deduct TDS 10% and return tax amount and set netsalary instance member after deducting tax.
Declare TDS as static variable.
Your application should create only 3 object if you try to create 4th object it should throw exception.
Give appropriate validation like salary can not be 0 or negative, maximum
Salary allowed is 50000 if you try to set more then 50000 it should give some error message.
When you run your application it should print name of company.
sol:*/
using System;

namespace Problem2
{
    class Employee
    {
        int id;
        static int getid;
        string name;
        double salary;
        double netSalary;
        static float TDS = 0.10f;

        static Employee()
        {
            Console.WriteLine("Pearson Specter Litt");
        }
        public int ID
        {
            get { return getid; }
        }

        public string Name
        {
            get { return name; }
            set { name = value; }
        }
        public double Salary
        {
            get { return salary; }
            set
            {
                if (value > 0 && value < 50000)
                    salary = value;
                else
                    throw new Exception("Negative and zero values are not allowed or salary greater than 50000");
            }
        }

        public Employee(string name, double salary)
        {
            if (id < 4)
            {
                id = ++getid;
            }
            else
            {
                throw new Exception("Cannot create objects more than four");
            }
            Name = name;
            try
            {
                Salary = salary;
            }
            catch (Exception ie)
            {
                Console.WriteLine(ie);
            }
        }

        public static double deductTDS(Employee emp)
        {
            double tax = emp.Salary * TDS;
            emp.netSalary = emp.Salary - tax;
            return tax;
        }
        public void display()
        {
            Console.WriteLine("Id : {0} | Name : {1} | NetSalary : {2}",id,name,netSalary);
        }
    }
    public class Demo
    {
        public static void Main()
        {
            Employee emp1 = new Employee("Starc", 10000);
            Employee emp2 = new Employee("AB", 20000);
            Employee emp3 = new Employee("Steve", 30000);
            Employee emp4 = null;
            try
            {
                emp4 = new Employee("Babar", 40000);
            }
            catch (Exception ie)
            {
                Console.WriteLine(ie);
            }
            Console.WriteLine("The deducted tax of emp1 is : " + Employee.deductTDS(emp1));
            Console.WriteLine("The deducted tax of emp2 is : " + Employee.deductTDS(emp2));
            Console.WriteLine("The deducted tax of emp3 is : " + Employee.deductTDS(emp3));
            emp1.display();
            emp2.display();
            emp3.display();
        }
    }
}
